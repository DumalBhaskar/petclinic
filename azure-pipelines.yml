# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: BuildIt 
  jobs:
  - job: RunJavaBuild
    displayName: Petclinic
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloudazure'
        organization: 'gnishanth0728'
        scannerMode: 'Other'
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.projectKey=gnishanth0728_spring-framework-petclinic
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: false
        goals: package
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/target'
        Contents: '*.war'
        TargetFolder: '$(build.artifactstagingdirectory)'      
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'  
    
- stage: DockerBuildAndPush
  jobs:
  - job: BuildPetclinicImage
    displayName: PetclinicDokerImage
    steps: 
    - task: Docker@2
      inputs:
        containerRegistry: 'registrydocker'
        command: 'login'
    - task: Docker@2
      inputs:
        containerRegistry: 'registrydocker'
        repository: 'gnishanth777 / petclinic'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

        
- stage: DownloadArtifacts
  condition: failed()
  jobs:
  - job: DownloadArtifacts
    displayName: ArtifactsDownload
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        itemPattern: '*.war'
        downloadPath: '$(System.ArtifactsDirectory)'
